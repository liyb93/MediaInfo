.DEFAULT_GOAL:=all

# Output all commands.
ifeq ($(VERBOSE),1) 
	SHELL=sh -xv
endif

bold := $(shell tput bold 2> /dev/null)
normal := $(shell tput sgr0 2> /dev/null)

ifeq ($(CURDIR),)
	CURDIR:=$(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))
endif
SOURCE_ROOT ?= ${CURDIR}
SOURCE_ROOT := $(SOURCE_ROOT)/dependencies

SPACE := $(null) $(null)
CURRENT_DIR := $(subst $(SPACE),"\\ ",$(CURDIR))

ifeq ($(BUILT_PRODUCTS_DIR),)
	BUILD_DIR = ${CURRENT_DIR}/build
else
	BUILD_DIR = ${BUILT_PRODUCTS_DIR}
endif

ONLY_ACTIVE_ARCH ?= NO
NATIVE_ARCH ?= $(shell uname -m)
VALID_ARCHS = x86_64 arm64
unexport INSTALL_DIR

CFLAGS =
LDFLAGS =

CFLAGS_x86_64 = -target x86_64-apple-macos10.14
LDFLAGS_x86_64 = -target x86_64-apple-macos10.14

CFLAGS_arm64 = -target arm64-apple-macos11
LDFLAGS_arm64 = -target arm64-apple-macos11

ifeq ($(CONFIGURATION),Debug)
	CFLAGS_x86_64 += -g
	CFLAGS_arm64 += -g
else
	CFLAGS_x86_64 += -DNDEBUG
	CFLAGS_arm64 += -DNDEBUG
endif

liblz4_files = ${BUILD_DIR}/liblz4/$(NATIVE_ARCH)/lib/liblz4.a

ifeq ($(ONLY_ACTIVE_ARCH),NO)
ifeq ($(NATIVE_ARCH),x86_64)
# build arm code
		liblz4_files += ${BUILD_DIR}/liblz4/arm64/lib/liblz4.a
else
# build intel code
		liblz4_files += ${BUILD_DIR}/liblz4/x86_64/lib/liblz4.a
endif
endif

check_arch:
# 	@echo NATIVE_ARCH IS $(NATIVE_ARCH)
ifeq ($(filter $(NATIVE_ARCH),$(VALID_ARCHS)),)
		$(error "Current arch ${NATIVE_ARCH} is not supported! Valid archs are: ${VALID_ARCHS}")
endif
ifeq ($(ONLY_ACTIVE_ARCH),NO)
		@echo "${bold}Building liblz4 universal binary${normal}"
else
		@echo "${bold}Building liblz4 for $(NATIVE_ARCH) architecture${normal}"
endif
	@echo "CURRENT_DIR: ${CURRENT_DIR}"
	@echo "SOURCE_ROOT: ${SOURCE_ROOT}"
	@echo "BUILD_DIR: ${BUILD_DIR}"

clean:
	@echo "${bold}Cleaning liblz4…${normal}"
	${MAKE} -C "${SOURCE_ROOT}/lz4" clean
		
	@rm -rf "${BUILD_DIR}/liblz4/" 2> /dev/null
	@echo ""

liblz4: ${BUILD_DIR}/liblz4/liblz4.a

${BUILD_DIR}/liblz4/liblz4.a : source-lz4


source-lz4: ${SOURCE_ROOT}/lz4/Makefile
${SOURCE_ROOT}/lz4/Makefile :
	@echo "${bold}Submodule update…${normal}"
	cd "${SOURCE_ROOT}" && git submodule update --init

# Set Target-specific variables for arm64
${BUILD_DIR}/liblz4/arm64/lib/liblz4.a : LZ4_INSTALL_DIR = ${BUILD_DIR}/liblz4/arm64
${BUILD_DIR}/liblz4/arm64/lib/liblz4.a : CFLAGS := ${CFLAGS} ${CFLAGS_arm64}
${BUILD_DIR}/liblz4/arm64/lib/liblz4.a : LDFLAGS := ${LDFLAGS} ${LDFLAGS_arm64}
${BUILD_DIR}/liblz4/arm64/lib/liblz4.a : ARCH := arm64

# Set Target-specific variables for x86_64 
${BUILD_DIR}/liblz4/x86_64/lib/liblz4.a : LZ4_INSTALL_DIR = ${BUILD_DIR}/liblz4/x86_64
${BUILD_DIR}/liblz4/x86_64/lib/liblz4.a : CFLAGS := ${CFLAGS} ${CFLAGS_x86_64}
${BUILD_DIR}/liblz4/x86_64/lib/liblz4.a : LDFLAGS := ${LDFLAGS} ${LDFLAGS_x86_64}
${BUILD_DIR}/liblz4/x86_64/lib/liblz4.a : ARCH := x86_64

${liblz4_files} : 
	@echo ""
	@echo "${bold}Building liblz4 for ${ARCH} platform into ${LZ4_INSTALL_DIR} ($@)…${normal}"
	
	@mkdir -p "${LZ4_INSTALL_DIR}"
	
	CFLAGS="${CFLAGS}" LDFLAGS="${LDFLAGS}" CC="/usr/bin/cc -target ${ARCH}-apple-macos" PREFIX="${LZ4_INSTALL_DIR}" ${MAKE} -C "${SOURCE_ROOT}/lz4" clean
	CFLAGS="${CFLAGS}" LDFLAGS="${LDFLAGS}" CC="/usr/bin/cc -target ${ARCH}-apple-macos" PREFIX="${LZ4_INSTALL_DIR}" ${MAKE} -C "${SOURCE_ROOT}/lz4"

	@echo ""
	@echo "${bold}Installing liblz4 for ${ARCH} platform on ${LZ4_INSTALL_DIR} …${normal}"
	CFLAGS="${CFLAGS}" LDFLAGS="${LDFLAGS}" CC="/usr/bin/cc -target ${ARCH}-apple-macos" PREFIX="${LZ4_INSTALL_DIR}" ${MAKE} -C "${SOURCE_ROOT}/lz4" install

${BUILD_DIR}/liblz4/liblz4.a : ${liblz4_files}
	@mkdir -p "${BUILD_DIR}/liblz4"
	@echo ""
ifeq ($(ONLY_ACTIVE_ARCH),NO)
		@echo "${bold}Creating liblz4 universal library…${normal}"
		lipo -create -output "${BUILD_DIR}/liblz4/liblz4.a" "${BUILD_DIR}/liblz4/x86_64/lib/liblz4.a" "${BUILD_DIR}/liblz4/arm64/lib/liblz4.a"
else
		@echo "${bold}Creating liblz4 library for ${NATIVE_ARCH} platform…${normal}"
		@rm -f "${BUILD_DIR}/liblz4/liblz4.a" > /dev/null
		ln "${BUILD_DIR}/liblz4/${NATIVE_ARCH}/lib/liblz4.a" "${BUILD_DIR}/liblz4/liblz4.a"
endif
	@rm -rf "${BUILD_DIR}/liblz4/include" > /dev/null
	ln -s "${BUILD_DIR}/liblz4/${NATIVE_ARCH}/include" "${BUILD_DIR}/liblz4/include"
	@echo ""
	

all: check_arch source-lz4 liblz4
install: check_arch source-lz4 liblz4

